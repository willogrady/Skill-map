{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "publisherEmail": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The email address of the owner of the service"
      }
    },
    "publisherName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The name of the owner of the service"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Developer",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Developer",
      "metadata": {
        "description": "The pricing tier of this API Management service"
      }
    },
    "skuCount": {
      "type": "string",
      "allowedValues": [
        "1",
        "2"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The instance size of this API Management service."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
      "siteName": {
          "type": "string",
          "metadata": {
              "description": "Name of azure web app"
          }
      },
      "resourceGroupName": {
          "type": "string",
          "metadata": {
            "description": "Name of resource group to be used for mysql server"
          }
      },
      "administratorLogin": { 
          "type": "string",
          "minLength": 1,
          "metadata": {
              "description": "Database administrator login name"
          }
      },
      "administratorLoginPassword": {
          "type": "securestring",
          "minLength": 8,
          "maxLength": 128,
          "metadata": {
              "description": "Database administrator password"
          }
      },
      "databaseSkucapacity": {
          "type": "int",
          "defaultValue": 1,
        "allowedValues": [
          1,
          2,
          4,
          8,
          16,
          32
        ],
          "metadata": {
              "description": "Azure database for MySQL compute capacity in vCores (2,4,8,16,32)"
          }
      },
      "databaseSkuName": {
          "type": "string",
          "defaultValue": "B_Gen5_1",
        "allowedValues": [
          "B_Gen5_1",
          "GP_Gen5_2",
          "GP_Gen5_4",
          "GP_Gen5_8",
          "GP_Gen5_16",
          "GP_Gen5_32",
          "MO_Gen5_2",
          "MO_Gen5_4",
          "MO_Gen5_8",
          "MO_Gen5_16",
          "MO_Gen5_32"
        ],
          "metadata": {
              "description": "Azure database for MySQL sku name "
          }
      },
      "databaseSkuSizeMB": {
          "type": "int",
          "allowedValues": [
            102400,
            51200,
              5120            ],
          "defaultValue": 5120, 
          "metadata": {
              "description": "Azure database for MySQL Sku Size "
          }
      },
      "databaseSkuTier": {
          "type": "string",
          "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "GeneralPurpose",
          "MemoryOptimized"
        ],
          "metadata": {
              "description": "Azure database for PostgreSQL pricing tier"
          }
      },
      "mysqlVersion": {
          "type": "string",
          "allowedValues": [
              "5.6",
              "5.7"
          ],
          "defaultValue": "5.7",
          "metadata": {
              "description": "MySQL version"
          }
      },
      "location": { 
          "type": "string",
          "defaultValue": "[resourceGroup().location]",
          "metadata": {
              "description": "Location for all resources."
          }
      },
      "databaseSkuFamily": {
          "type": "string",
          "defaultValue": "Gen5",
          "metadata": {
              "description": "Azure database for PostgreSQL sku family"
          }
      },
      "hostingPlanName": {
        "type": "string",
        "metadata": {
          "description": "Name of app service plan"
        }
      }
  },
  "variables": {
      "databaseName": "[concat(parameters('siteName'), 'db')]",
      "serverName": "[concat(parameters('resourceGroupName'), 'MSM')]",
      "hostingPlanName": "[concat(parameters('hostingPlanName'))]",
      "apiManagementServiceName": "[concat('apiservice', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "name": "[parameters('apiManagementServiceName')]",
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2019-01-01",
      "tags": {},
      "properties": {
        "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
        "hostnameConfigurations": [
          {
            "type": "Proxy",
            "hostName": "[concat(parameters('apiManagementServiceName'), '.azure-api.net')]",
            "defaultSslBinding": "true",
            "negotiateClientCertificate": "false"
          }
        ],
        "customProperties": {
          "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "False"
        },
        "enableClientCertificate": "boolean",
        "virtualNetworkType": "None",
        "publisherEmail": "[parameters('publisherEmail')]",
        "publisherName": "[parameters('apiManagementServiceName')]"
      },
      "sku": {
        "name": "Developer",
        "capacity": "1"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "[parameters('location')]"
    },
    {
      "apiVersion": "2016-09-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerSizeId": "1",
        "reserved": true,
        "numberOfWorkers": 0,
        "hostingEnvironment": ""
      },
      "sku": {
        "Tier": "Standard",
        "Name": "S1"
      }
    },
    {
      "apiVersion": "2016-08-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
      ],
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarmId": "[variables('hostingPlanName')]",
        "hostingEnvironment": ""
      },
      "resources": [
        {
          "apiVersion": "2016-08-01",
          "name": "connectionstrings",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', parameters('siteName'))]"
          ],
          "properties": {
            "defaultConnection": {
              "value": "[concat('Database=', variables('databaseName'), ';Data Source=', reference(resourceId('Microsoft.DBforMySQL/servers',variables('serverName'))).fullyQualifiedDomainName, ';User Id=', parameters('administratorLogin'),'@', variables('serverName'),';Password=', parameters('administratorLoginPassword'))]",
              "type": "MySql"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "name": "[variables('serverName')]",
      "type": "Microsoft.DBforMySQL/servers",
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkucapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "[parameters('databaseSkuFamily')]"
      },
      "properties": {
        "version": "[parameters('mysqlVersion')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "storageProfile": {
          "storageMB": "[parameters('databaseSkuSizeMB')]",
          "backupRetentionDays": "7",
          "geoRedundantBackup": "Disabled"
        },
        "sslEnforcement": "Disabled"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2017-12-01",
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'),'/databases/' , variables('databaseName'))]",
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ],
          "location": "[parameters('location')]",
          "name": "AllowAzureIPs",
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "name": "[variables('databaseName')]",
          "type": "databases",
          "apiVersion": "2017-12-01",
          "properties": {
            "charset": "utf8",
            "collation": "utf8_general_ci"
          },
          "dependsOn": [
            "[concat('Microsoft.DBforMySQL/servers/', variables('serverName'))]"
          ]
        }
      ]
    }
  ]
}
